name: Ubuntu

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++-10, g++-11]
        buildmode: [Debug, Release]

    steps:
    - name: Checkout repository code
      uses: actions/checkout@v2
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install libssl-dev libcurl4-gnutls-dev ${{matrix.compiler}} 
    
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      working-directory: ${{github.workspace}}/build
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.buildmode}} -DCMAKE_CXX_COMPILER=${{matrix.compiler}}
   
    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config ${{matrix.buildmode}} -j 8

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration. Print debug traces on failure
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -j 8 -C ${{matrix.buildmode}} --output-on-failure
