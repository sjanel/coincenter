name: Ubuntu

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  ubuntu-build:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++-11, clang++-18]
        buildmode: [Debug, Release]

    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install cmake libssl-dev libcurl4-gnutls-dev ninja-build -y --no-install-recommends

      - name: Install gcc
        run: |
          sudo apt install ${{matrix.compiler}} -y --no-install-recommends

          # Temporary workaround for libasan bug stated here: https://github.com/google/sanitizers/issues/1716
          sudo sysctl vm.mmap_rnd_bits=28
        if: startsWith(matrix.compiler, 'g++')

      - name: Install clang
        run: |
          CLANG_VERSION=$(echo ${{matrix.compiler}} | cut -d- -f2)
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh ${CLANG_VERSION}
        if: startsWith(matrix.compiler, 'clang++')

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.buildmode}} -DCMAKE_CXX_COMPILER=${{matrix.compiler}} -GNinja

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: ninja

      - name: Tests
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: ctest -j 4 -C ${{matrix.buildmode}} --output-on-failure
